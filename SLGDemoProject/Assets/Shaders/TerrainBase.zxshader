Setting 
{
    Blend SrcAlpha OneMinusSrcAlpha
    BlendOp Add
    Cull Back
    ZTest Less
    ZWrite On
    RenderQueue Opaque
}

Vertex
{
    Input
    {
        0 vec3 aPos       : POSITION
        1 vec2 aTexCoords : TEXCOORD
        2 vec3 aNormal    : NORMAL
    }

    Output
    {
        0 vec4 WorldPos  : TEXCOORD0
        1 vec2 TexCoords : TEXCOORD0
    }

    Properties
    {
        using ENGINE_Model
        using ENGINE_View
        using ENGINE_Projection
    }

    Program
    {
        void main()
        {
            TexCoords = aTexCoords;    
            WorldPos = mul(ENGINE_Model * vec4(aPos, 1.0));
            ZX_Position = mul(ENGINE_Projection * ENGINE_View * WorldPos);
        }
    }
}

Fragment
{
    Input
    {
        0 vec4 WorldPos  : TEXCOORD0
        1 vec2 TexCoords : TEXCOORD0
    }

    Output
    {
        0 vec4 FragColor : SV_Target
    }

    Properties
    {
        vec2 _Offset
        float _Size
        sampler2D _Texture1
    }

    Program
    {
        void main()
        {
            vec2 texColorW = vec2((WorldPos.x + _Offset.x) * _Size, (WorldPos.z * _Offset.y) * _Size);
            vec3 color = texture(_Texture1, texColorW).rgb;
            vec3 color1 = color * vec3(0.2, 0.6, 0.5);
            vec3 color2 = (1 - color) * vec3(0.262, 0.705, 0.596);
            FragColor = vec4(color1 + color2, 1.0);
        }
    }
}